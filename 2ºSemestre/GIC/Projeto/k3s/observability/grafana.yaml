apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: g11-bytebazaar
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        runAsUser: 472
      containers:
      - name: grafana
        image: grafana/grafana:10.4.0
        ports:
          - containerPort: 3000
            name: http
        env:
          - name: GF_PATHS_PROVISIONING
            value: "/etc/grafana/provisioning"
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ORG_ROLE
            value: "Viewer"
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          limits:
            memory: "512Mi"
            cpu: "700m"
          requests:
            memory: "256Mi"
            cpu: "450m"
        volumeMounts:
          - name: grafana-storage
            mountPath: /var/lib/grafana
          - name: grafana-datasources
            mountPath: /etc/grafana/provisioning/datasources
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: grafana-datasources
          configMap:
            name: observability-configs
            items:
              - key: datasources.yaml
                path: provisioning/datatsources/datasources.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: g11-bytebazaar
spec:
  selector:
    app: grafana
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 3000
  type: ClusterIP
